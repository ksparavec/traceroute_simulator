---
# Main deployment playbook for SSH restricted access
- name: Deploy SSH restricted access for traceroute
  hosts: all
  gather_facts: yes
  become: no

  vars_files:
    - "{{ playbook_dir }}/config/default.yml"

  vars:
    # Debug: show which config file is being loaded
    debug_config_file: "{{ playbook_dir }}/config/default.yml"
  
  pre_tasks:
    - name: Validate required variables
      assert:
        that:
          - username is defined
          - username != ""
        fail_msg: |
          CRITICAL ERROR: Username must be provided via command line
          
          Usage: ansible-playbook -i "host," deploy.yml -e "username=your_user"
        success_msg: "Username provided: {{ username }}"
      tags: [always]

    - name: Check if trace user exists (CRITICAL - must exist before proceeding)
      getent:
        database: passwd
        key: "{{ restricted_user.name }}"
      register: user_exists
      failed_when: false
      changed_when: false
      tags: [user, critical]

    - name: FAIL IMMEDIATELY if trace user does not exist
      fail:
        msg: |
          CRITICAL ERROR: User '{{ restricted_user.name }}' does not exist on this system.
          
          This playbook requires the trace user to be pre-created before deployment.
          Please ensure the user account exists with appropriate permissions and try again.
          
          No further actions will be performed until this requirement is met.
      when: not (user_exists.ansible_facts is defined and user_exists.ansible_facts.getent_passwd is defined and restricted_user.name in user_exists.ansible_facts.getent_passwd)
      tags: [user, critical]

    - name: Check if configuration file exists
      stat:
        path: "{{ playbook_dir }}/config/default.yml"
      register: config_check
      delegate_to: localhost
      run_once: true

    - name: Fail if configuration file is missing
      fail:
        msg: |
          Configuration file not found: {{ playbook_dir }}/config/default.yml

          Please create your configuration file:
          1. Copy the example: cp config/default.yml.example config/default.yml
          2. Edit config/default.yml with your settings (especially the SSH public key)
          3. Run this playbook again
      when: not config_check.stat.exists
      delegate_to: localhost
      run_once: true


    - name: Check OpenSSH version for restrict support
      shell: ssh -V 2>&1 | grep -oE 'OpenSSH_[0-9]+\.[0-9]+' | cut -d_ -f2
      register: openssh_version
      changed_when: false
      tags: [always]

    - name: Set restrict support fact
      set_fact:
        supports_restrict: "{{ openssh_version.stdout is version('7.2', '>=') }}"
      tags: [always]


  roles:
    - role: ssh_restricted_access
      tags: [deploy]
  
  post_tasks:

