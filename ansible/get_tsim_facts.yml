---
# Ansible Playbook for collecting network facts as raw data
# 
# OPERATIONAL MODE:
# 1. Execute get_facts.sh script on remote hosts to collect comprehensive network facts
# 2. Transfer raw text output to Ansible controller  
# 3. Store raw facts files in TRACEROUTE_SIMULATOR_RAW_FACTS directory
# 4. Raw facts are preserved without modification for later processing

- name: Collect network facts from all hosts
  hosts: all
  gather_facts: no # Don't gather facts using standard Ansible plugins
  strategy: free   # Process tasks on each host as fast as possible
  serial: 3        # Process so many hosts in parallel
  vars:
    # Directory configuration from environment variables
    raw_facts_dir: "{{ lookup('env', 'TRACEROUTE_SIMULATOR_RAW_FACTS') | default('/tmp/tsim/raw_facts', true) }}"
    temp_dir: "/tmp/tsim_facts_temp"
    
    # Scripts
    facts_script: "get_facts.sh"
    facts_script_temp: "get_facts_{{ ansible_date_time.epoch }}_{{ inventory_hostname }}.sh"
    
    # Configuration
    collection_timeout: 300  # 5 minutes timeout for facts collection
  
  tasks:
    - name: Display operation mode
      debug:
        msg:
          - "Operation Mode: Raw facts collection from network hosts"
          - "Target directory: {{ raw_facts_dir }}"
      run_once: true

    - name: Create raw facts output directory
      file:
        path: "{{ raw_facts_dir }}"
        state: directory
        mode: '0755'
      run_once: true
      delegate_to: localhost

    - name: Create temporary directory on Ansible controller
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0755'
      run_once: true
      delegate_to: localhost

    - name: Check if unified facts script exists
      stat:
        path: "{{ playbook_dir }}/{{ facts_script }}"
      register: facts_script_stat
      delegate_to: localhost

    - name: Fail if facts script is missing
      fail:
        msg: "Facts collection script {{ facts_script }} not found in {{ playbook_dir }}"
      when: not facts_script_stat.stat.exists

    - name: Copy facts collection script to remote host
      copy:
        src: "{{ playbook_dir }}/{{ facts_script }}"
        dest: "/tmp/{{ facts_script_temp }}"
        mode: '0755'
      register: script_copy

    - name: Execute unified facts collection script on remote host
      shell: "/tmp/{{ facts_script_temp }}"
      become: yes
      become_method: sudo
      register: facts_output
      failed_when: facts_output.rc != 0
      async: "{{ collection_timeout }}"
      poll: 10

    - name: Remove facts collection script from remote host
      file:
        path: "/tmp/{{ facts_script_temp }}"
        state: absent

    - name: Save raw facts output to final location
      copy:
        content: "{{ facts_output.stdout }}"
        dest: "{{ raw_facts_dir }}/{{ inventory_hostname }}_facts.txt"
      delegate_to: localhost

    - name: Display raw facts collection summary
      debug:
        msg: 
          - "Raw facts collected from {{ inventory_hostname }}"
          - "Facts size: {{ (facts_output.stdout | length / 1024) | round(1) }}KB"
          - "Collection time: {{ facts_output.delta if facts_output.delta is defined else 'unknown' }}"
          - "Exit code: {{ facts_output.rc }}"
          - "Raw facts file: {{ raw_facts_dir }}/{{ inventory_hostname }}_facts.txt"

    - name: Get final raw facts file statistics
      stat:
        path: "{{ raw_facts_dir }}/{{ inventory_hostname }}_facts.txt"
      delegate_to: localhost
      register: raw_file_stat

    - name: Display final collection summary
      debug:
        msg: 
          - "Successfully collected raw facts for {{ inventory_hostname }}"
          - "Raw facts file size: {{ (raw_file_stat.stat.size / 1024) | round(1) }}KB"
          - "Raw facts location: {{ raw_facts_dir }}/{{ inventory_hostname }}_facts.txt"
          - "Raw facts preserved for later processing"


  post_tasks:
    - name: Display overall collection summary
      debug:
        msg:
          - "Network facts collection completed"
          - "Operation mode: Raw facts collection from live network infrastructure"
          - "Total hosts processed: {{ ansible_play_hosts | length }}"
          - "Raw facts directory: {{ raw_facts_dir }}"
          - "Each host has a raw facts file: {hostname}_facts.txt"
          - "Raw facts are preserved without modification for later processing"
      run_once: true
      delegate_to: localhost

    - name: Clean up temporary directory
      file:
        path: "{{ temp_dir }}"
        state: absent
      run_once: true
      delegate_to: localhost

# Usage Examples:
#
# Basic usage with default raw facts directory (/tmp/tsim/raw_facts):
#   ansible-playbook -i inventory.ini get_tsim_facts.yml
#
# Using environment variable for raw facts directory:
#   export TRACEROUTE_SIMULATOR_RAW_FACTS=/path/to/raw_facts
#   ansible-playbook -i inventory.ini get_tsim_facts.yml
#
# Limit to specific hosts:
#   ansible-playbook -i inventory.ini get_tsim_facts.yml --limit "hq-*"
#
# Increase verbosity for debugging:
#   ansible-playbook -i inventory.ini get_tsim_facts.yml -vv
#
# Set custom timeout:
#   ansible-playbook -i inventory.ini get_tsim_facts.yml -e collection_timeout=600
#
# Notes:
# - Uses 'free' strategy for maximum parallelism (all hosts process simultaneously)
# - Each host executes the unified get_facts.sh script once
# - Raw facts are stored without modification in TRACEROUTE_SIMULATOR_RAW_FACTS directory
# - Final output is one raw facts file per host: {hostname}_facts.txt
# - Requires sudo/root access on remote hosts for complete iptables/ipset access
# - Temporary files are automatically cleaned up after processing
# - Compatible with ansible-parallel-shell for high-performance execution
# - Supports all standard Ansible inventory formats and host patterns
# - Raw facts include: interfaces/IPs, policy rules, routing tables, iptables-save, ipset save
# - Routing tables are automatically discovered from policy rules output
